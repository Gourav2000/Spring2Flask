{"controllers": {"ExampleController": "\nfrom flask import Flask, request, jsonify\n\napp = Flask(__name__)\n\n@app.route('/getAllExample', methods=['GET'])\ndef getAllExample():\n    return jsonify(exampleService.getAllExample())\n\n@app.route('/saveExample', methods=['POST'])\ndef saveExample():\n    exampleEntity = request.get_json()\n    return jsonify(exampleService.saveExample(exampleEntity))"}, "entities": {"ExampleEntity": "\nclass ExampleEntity:\n    def __init__(self, id, name, team, employeeCode):\n        self.id = id\n        self.name = name\n        self.team = team\n        self.employeeCode = employeeCode"}, "repositories": {"ExampleRepository": "\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy import Column, Integer, String\nfrom sqlalchemy.orm import relationship, sessionmaker\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.orm import scoped_session\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\nfrom sqlalchemy.ext.declarative import declared_attr\nfrom sqlalchemy.ext.declarative import DeclarativeMeta\nfrom sqlalchemy.orm import relationship\nfrom sqlalchemy.orm import backref\n\nBase = declarative_base()\n\nclass ExampleRepository(Base):\n    __tablename__ = 'example_entity'\n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n    \n    @declared_attr\n    def __mapper_args__(cls):\n        return {\n            'polymorphic_identity': cls.__name__,\n            'polymorphic_on': cls.type\n        }"}, "services": {"ExampleService": "\nclass ExampleService:\n    def getAllExample(self):\n        # code to get all examples\n        pass\n\n    def saveExample(self, exampleEntity):\n        # code to save example\n        pass", "ExampleServiceImpl": "\nclass ExampleServiceImpl:\n    def __init__(self, exampleRepository):\n        self.exampleRepository = exampleRepository\n\n    def getAllExample(self):\n        return self.exampleRepository.findAll()\n\n    def saveExample(self, exampleEntity):\n        return self.exampleRepository.save(exampleEntity)"}}